import os
import psycopg
import json

# Connect to the database
conn = psycopg.connect(os.environ["DATABASE_URL"])


def data_to_base(FILENAME: str):
    """
    Function to add applicant data from json file to database
    """

    # Create a cursor object and create "applicant" table
    with conn.cursor() as cur:

        # Drop applicants table if it exists
        cur.execute("""
        DROP TABLE IF EXISTS applicants;""")

        # Create "applicants" table with columns defined by assignment
        cur.execute("""
        CREATE TABLE IF NOT EXISTS applicants(
          id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          program TEXT,
          comments TEXT,
          date_added date,
          url TEXT,
          status TEXT,
          term TEXT,
          us_or_international TEXT,
          gpa real,
          gre real,
          gre_v real,
          gre_aw real,
          degree TEXT,
          llm_generated_program TEXT,
          llm_generated_university TEXT
          );""")

        # Load and insert data from file
        with open(FILENAME, 'r') as fhand:
            data = json.load(fhand)

        # Insert each entry
        for entry in data:
            # Prepare data for insertion
            program = entry["program"] if entry["program"] else None
            comments = entry["comments"] if entry["comments"] else None
            date_added = entry["date_added"] if entry["date_added"] else None
            url = entry["url"] if entry["url"] else None
            status = entry["status"] if entry["status"] else None
            term = entry["term"] if entry["term"] else None
            us_or_international = entry["US/International"] if entry[
                "US/International"] else None
            gpa = float(entry["GPA"]) if entry["GPA"] else None
            gre = float(entry["GRE"]) if entry["GRE"] else None
            gre_v = float(entry["GRE_V"]) if entry["GRE_V"] else None
            gre_aw = float(entry["GRE_AW"]) if entry["GRE_AW"] else None
            degree = entry["Degree"] if entry["Degree"] else None
            llm_generated_program = entry["llm-generated-program"] if entry[
                "llm-generated-program"] else None
            llm_generated_university = entry[
                "llm-generated-university"] if entry[
                    "llm-generated-university"] else None

            cur.execute(
                """
            INSERT INTO applicants (
                program, comments, date_added, url, status, term, 
                us_or_international, gpa, gre, gre_v, gre_aw, degree,
                llm_generated_program, llm_generated_university
            ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """, (program, comments, date_added, url, status, term,
                  us_or_international, gpa, gre, gre_v, gre_aw, degree,
                  llm_generated_program, llm_generated_university))

        # Commit the changes to the database
        conn.commit()

    # Close the connection
    conn.close()


if __name__ == "__main__":
    input_file = "llm_extend_applicant_data.json"
    data_to_base(input_file)
    print("Done!!")
